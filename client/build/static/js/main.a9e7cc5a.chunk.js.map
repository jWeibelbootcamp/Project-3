{"version":3,"sources":["pages/Home.js","productStore.js","CartContext.js","components/ProductCard/ProductCard.js","pages/Store.js","pages/Success.js","pages/Cancel.js","components/CartProduct/CartProduct.js","components/Navbar/Navbar.js","App.js","index.js"],"names":["Home","id","class","href","productArray","name","price","getProductData","productData","find","product","undefined","console","log","CartContext","createContext","items","getProductQuantity","addOne","removeOne","deleteFromCart","getTotalCost","CartProvider","children","useState","cartProducts","setCartProducts","quantity","filter","currentProduct","contextValue","map","totalCost","cartItem","Provider","value","ProductCard","props","cart","useContext","productQuantity","Card","Body","Title","Text","Form","as","Row","Label","column","sm","Col","Button","onClick","className","variant","Store","align","xs","md","index","Success","Cancel","CartProduct","size","NavComponent","show","setShow","checkout","fetch","method","headers","body","JSON","stringify","then","response","json","url","window","location","assign","productCount","reduce","sum","Navbar","bg","expand","Brand","Toggle","Collapse","Modal","onHide","Header","closeButton","toFixed","App","Container","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a9e7cc5a.chunk.js","sourcesContent":["//DEPENDENCIES\r\n// import { Link } from 'react-router-dom';\r\n\r\n//GRAPHQL\r\n// import { useQuery } from '@apollo/client';\r\n// import { QUERY_MATCHUPS } from '../utils/queries';\r\n\r\nconst Home = () => {\r\n\treturn (\r\n\t\t<section id=\"hero\">\r\n    <div class=\"hero-container\" data-aos=\"zoom-in\" data-aos-delay=\"100\">\r\n      <h1>Welcome to Cheesecake Fact'ry</h1>\r\n      <h2>We provide the best baked goods at an affordable price!</h2>\r\n      <a href=\"#about\" class=\"btn-get-started\">Get Started</a>\r\n    </div>\r\n  </section>\r\n\t);\r\n};\r\n\r\nexport default Home;\r\n","\r\n// this will be converted to models\r\nconst productArray = [\r\n    {\r\n        id: 'price_1M9Xq4A0zgGYE8hKjaEdjfu0',\r\n        name: 'Large Cheesecake',\r\n        price: 54.99\r\n    },\r\n    {\r\n        id: 'price_1M9Xr4A0zgGYE8hK80wPnIya',\r\n        name: 'Small Cheesecake',\r\n        price: 29.99\r\n    },\r\n    {\r\n        id: 'price_1M9XsCA0zgGYE8hKq6tJKx6T',\r\n        name: 'Strawberry Cheesecake',\r\n        price: 59.99\r\n    },\r\n    {\r\n        id: 'price_1M9XtRA0zgGYE8hK4ko4s0VO',\r\n        name: 'Carrot Cake',\r\n        price: 34.99\r\n    },\r\n    {\r\n        id: 'price_1M9XuNA0zgGYE8hKdKyBhMEZ',\r\n        name: 'Chocolate Chip Cookies',\r\n        price: 6.99\r\n    },\r\n    {\r\n        id: 'price_1M9XvJA0zgGYE8hKsRPAOjWn',\r\n        name: 'Coffee',\r\n        price: 4.99\r\n    }\r\n];\r\n\r\nfunction getProductData (id) {\r\n    let productData = productArray.find(product => product.id === id);\r\n\r\n    if (productData === undefined) {\r\n        console.log('Product not found for id: ' + id);\r\n        return undefined;\r\n    }\r\n\r\n    return productData;\r\n};\r\n\r\nexport { productArray, getProductData };","import { createContext, useState } from 'react';\r\nimport { getProductData } from './productStore';\r\n\r\nexport const CartContext = createContext({\r\n    items: [],\r\n    getProductQuantity: () => {},\r\n    addOne: () => {},\r\n    removeOne: () => {},\r\n    deleteFromCart: () => {},\r\n    getTotalCost: () => {}\r\n});\r\n\r\n// contains all the major functions for product and cart functionality\r\nexport function CartProvider({children}) {\r\n    const [cartProducts, setCartProducts] = useState([]);\r\n    \r\n    function getProductQuantity(id) {\r\n        const quantity = cartProducts.find(product => product.id === id)?.quantity\r\n\r\n        if(quantity === undefined) {\r\n            return 0;\r\n        }\r\n        \r\n        return quantity;\r\n    };\r\n\r\n    function addOne(id) {\r\n        const quantity = getProductQuantity(id);\r\n\r\n        // if product is not in the cart\r\n        if(quantity === 0) {\r\n            setCartProducts([...cartProducts, { id: id, quantity: 1 }]);\r\n        // if product is already in the cart\r\n        } else {\r\n            setCartProducts(cartProducts.map(\r\n                product => product.id === id \r\n                ? { ...product, quantity: product.quantity + 1 }\r\n                : product)\r\n            )\r\n        };\r\n    };\r\n\r\n    function removeOne(id) {\r\n        const quantity = getProductQuantity(id);\r\n\r\n        if(quantity === 1) {\r\n            deleteFromCart(id)\r\n        } else {\r\n            setCartProducts(cartProducts.map(\r\n                product => product.id === id \r\n                ? { ...product, quantity: product.quantity - 1 }\r\n                : product)\r\n            )  \r\n        };\r\n    };\r\n\r\n    function deleteFromCart(id) {\r\n        setCartProducts(\r\n            cartProducts => cartProducts.filter(currentProduct => {\r\n            return currentProduct.id !== id;\r\n        }))\r\n    };\r\n\r\n    function getTotalCost() {\r\n        let totalCost = 0;\r\n\r\n        // eslint-disable-next-line\r\n        cartProducts.map((cartItem) => {\r\n            const productData = getProductData(cartItem.id);\r\n            totalCost += (productData.price * cartItem.quantity);\r\n        });\r\n        return totalCost;\r\n    };\r\n\r\n    const contextValue = {\r\n        items: cartProducts,\r\n        getProductQuantity,\r\n        addOne,\r\n        removeOne,\r\n        deleteFromCart,\r\n        getTotalCost\r\n    };\r\n\r\n    return (\r\n    <CartContext.Provider value={contextValue}>\r\n        {children}\r\n    </CartContext.Provider>\r\n    );\r\n};\r\n\r\nexport default CartProvider;","import { Card, Button, Form, Row, Col } from 'react-bootstrap';\r\nimport { CartContext } from \"../../CartContext\";\r\nimport { useContext } from 'react';\r\n\r\nfunction ProductCard (props) {\r\n    const product = props.product;\r\n    const cart = useContext(CartContext);\r\n    const productQuantity = cart.getProductQuantity(product.id);\r\n    // console.log(cart.items);\r\n\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <Card.Title>{product.name}</Card.Title>\r\n                <Card.Text>${product.price}</Card.Text>\r\n                {/* checks product quantity to determine which buttons to show */}\r\n                { productQuantity > 0 ?\r\n                    <div>\r\n                        <Form as={Row}>\r\n                            <Form.Label column='true' sm='6'> In Cart: {productQuantity} </Form.Label>\r\n                            <Col sm='6'>\r\n                                <Button sm='6' onClick={ () => cart.addOne(product.id)} className='mx-2'>+</Button>\r\n                                <Button sm='6' onClick={ () => cart.removeOne(product.id)}className='mx-2'>-</Button>\r\n                            </Col>\r\n                        </Form>\r\n                        <Button variant='danger' onClick={ () => cart.deleteFromCart(product.id)} className='my-2'>Remove All</Button>\r\n                    </div>\r\n                    :\r\n                    <Button variant='primary' onClick={ () => cart.addOne(product.id) }> Add To Cart </Button>\r\n                }\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n};\r\n\r\nexport default ProductCard;","import { Row, Col } from 'react-bootstrap';\r\nimport { productArray } from '../productStore';\r\nimport ProductCard from '../components/ProductCard/ProductCard';\r\n\r\nfunction Store() {\r\n    return (\r\n        <div>\r\n            <h1 align='center' className='p-3'>\r\n                Welcome, get Shopping!\r\n            </h1>\r\n            <Row xs={1} md={3} className='g-4'>\r\n                {productArray.map((product, index) => (\r\n                    <Col align='center' key={index}>\r\n                        <ProductCard product={product} />\r\n                    </Col>\r\n                ))}\r\n            </Row>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Store;","\r\nfunction Success() {\r\n    return (\r\n        <h1>Purchase Successful!</h1>\r\n    );\r\n};\r\n\r\nexport default Success;","\r\n\r\nfunction Cancel() {\r\n    return (\r\n        <h1>Stripe payment has been cancelled!</h1>\r\n    );\r\n};\r\n\r\nexport default Cancel;","import Button from 'react-bootstrap/Button';\r\nimport { CartContext } from '../../CartContext';\r\nimport { useContext } from 'react';\r\nimport { getProductData } from '../../productStore';\r\n\r\n// will give product information to the shopping cart modal\r\nfunction CartProduct(props) {\r\n    const cart = useContext(CartContext);\r\n    const id = props.id;\r\n    const quantity = props.quantity;\r\n    const productData = getProductData(id);\r\n\r\n    return (\r\n        <div>\r\n            <h3>{ productData.name }</h3>\r\n            <p>Qty: { quantity }</p>\r\n            <p>${ (quantity * productData.price) }</p>\r\n            <Button size='sm' onClick={ () => cart.deleteFromCart(id) }>Remove</Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CartProduct;","import { Button, Navbar, Modal } from 'react-bootstrap';\r\nimport { useState, useContext } from 'react';\r\nimport { CartContext } from '../../CartContext';\r\nimport CartProduct from '../CartProduct/CartProduct';\r\n\r\nfunction NavComponent() {\r\n    const cart = useContext(CartContext);\r\n    const [show, setShow] = useState(false);\r\n    const handleShow = () => setShow(true);\r\n    const handleClose = () => setShow(false);\r\n\r\n    // checkout function for checkout button w/ POST route.\r\n    const checkout = async () => {\r\n        await fetch('http://localhost:3000/checkout' , { // this address will need to change\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({items: cart.items})\r\n        }).then((response) => {\r\n            return response.json();\r\n        }).then((response) => {\r\n            if(response.url) {\r\n                window.location.assign(response.url) // sends user to Stripe\r\n            }\r\n        });\r\n    };\r\n\r\n    // adds up all product.quantity to show total amount of products in cart\r\n    const productCount = cart.items.reduce((sum, product) => sum + product.quantity, 0);\r\n    console.log(cart);\r\n    return (\r\n        <div>\r\n            <Navbar bg='light' expand='sm'>\r\n                <Navbar.Brand href='/'>\r\n                    Cheesecake Fact'ry\r\n                </Navbar.Brand>\r\n\t\t\t\t\t\t\t\t<Navbar.Brand href='/about'>\r\n\t\t\t\t\t\t\t\t\tAbout\r\n\t\t\t\t\t\t\t\t</Navbar.Brand>\r\n\t\t\t\t\t\t\t\t<Navbar.Brand href='/store'>\r\n\t\t\t\t\t\t\t\t\tStore\r\n\t\t\t\t\t\t\t\t</Navbar.Brand>\r\n\t\t\t\t\t\t\t\t<Navbar.Brand href='/login'>\r\n\t\t\t\t\t\t\t\t\tLogin\r\n\t\t\t\t\t\t\t\t</Navbar.Brand>\r\n                <Navbar.Toggle />\r\n                <Navbar.Collapse className='justify-content-end'>\r\n                    <Button onClick={handleShow}> Cart ({ productCount }) </Button>\r\n                </Navbar.Collapse>\r\n\t\t\t\t\t\t\t\t<Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Shopping Cart</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {/* If there are products, map over current */}\r\n                    { productCount > 0 ?\r\n                        <div>\r\n                            <p>In Cart: </p>\r\n                            { cart.items.map((currentProduct, index) => (\r\n                                // gives product info to the cart modal to display\r\n                                <CartProduct key={index} id={currentProduct.id} quantity={currentProduct.quantity}>Total</CartProduct>\r\n                            ))}\r\n                            {/* total cost limited to 2 decimals */}\r\n                            <h2>Total: ${ cart.getTotalCost().toFixed(2) }</h2>\r\n                            {/* checkout button */}\r\n                            <Button variant='success' onClick={checkout}>Checkout</Button>\r\n                        </div>\r\n                    :\r\n                        <div>\r\n                            <p>Your Cart Is Empty!</p>\r\n                        </div>\r\n                    }\r\n                </Modal.Body>\r\n            </Modal>\r\n            </Navbar>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NavComponent;","//DEPENDENCIES\r\nimport React from 'react';\r\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\r\n\r\n//PAGES\r\nimport Home from './pages/Home';\r\n\r\n//CSS\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Container } from 'react-bootstrap';\r\n\r\n//COMPONENTS\r\nimport Store from './pages/Store';\r\nimport Success from './pages/Success';\r\nimport Cancel from './pages/Cancel';\r\nimport CartProvider from './CartContext';\r\nimport NavComponent from './components/Navbar/Navbar';\r\n\r\nfunction App() {\r\n \r\n  return (\r\n    <CartProvider>\r\n      <Container>\r\n        <NavComponent></NavComponent>\r\n        <BrowserRouter>\r\n          <Routes>\r\n            <Route path='/' element={<Home />} />\r\n\t\t\t\t\t\t<Route path='/store' element={<Store />} />\r\n            <Route path='success' element={<Success />} />\r\n            <Route path='cancel' element={<Cancel />} />\r\n\t\t\t\t\t\t<Route path='store' element={<Store />} />\r\n\t\t\t\t\t</Routes>\r\n        </BrowserRouter>\r\n      </Container>\r\n    </CartProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n\t<App />,\r\n\tdocument.getElementById('root')\r\n)\r\n\r\n// import React from 'react';\r\n// import ReactDOM from 'react-dom';\r\n// import './index.css';\r\n// import App from './App';\r\n\r\n// const root = ReactDOM.createRoot(document.getElementById('root'));\r\n// root.render(\r\n//     <App />\r\n// );\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}