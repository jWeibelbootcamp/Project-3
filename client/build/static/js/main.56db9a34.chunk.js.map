{"version":3,"sources":["productStore.js","CartContext.js","components/CartProduct/CartProduct.js","components/Navbar/Navbar.js","components/ProductCard/ProductCard.js","pages/Store.js","pages/Success.js","pages/Cancel.js","components/LoginForm.js","pages/UserPage.js","App.js","reportWebVitals.js","index.js"],"names":["productArray","id","name","price","getProductData","productData","find","product","undefined","console","log","CartContext","createContext","items","getProductQuantity","addOne","removeOne","deleteFromCart","getTotalCost","CartProvider","children","useState","cartProducts","setCartProducts","quantity","filter","currentProduct","contextValue","map","totalCost","cartItem","Provider","value","CartProduct","props","cart","useContext","Button","size","onClick","NavComponent","show","setShow","productCount","reduce","sum","Navbar","expand","Brand","href","Toggle","Collapse","className","Modal","onHide","Header","closeButton","Title","Body","index","toFixed","variant","ProductCard","productQuantity","Card","Text","Form","as","Row","Label","column","sm","Col","Store","align","xs","md","Success","Cancel","LoginForm","Login","error","email","password","details","setDetails","onSubmit","e","preventDefault","htmlFor","type","onChange","target","to","adminUser","UserPage","loggedIn","setLoggedIn","user","setUser","setError","App","Container","element","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.56db9a34.chunk.js","sourcesContent":["\r\n// this will be converted to models\r\nconst productArray = [\r\n    {\r\n        id: '1',\r\n        name: 'Coffee',\r\n        price: 3.99\r\n    },\r\n    {\r\n        id: '2',\r\n        name: 'Pikachu',\r\n        price: 10.99\r\n    },\r\n    {\r\n        id: '3',\r\n        name: 'Bootcamp',\r\n        price: 10000\r\n    }\r\n];\r\n\r\nfunction getProductData (id) {\r\n    let productData = productArray.find(product => product.id === id);\r\n\r\n    if (productData === undefined) {\r\n        console.log('Product not found for id: ' + id);\r\n        return undefined;\r\n    }\r\n\r\n    return productData;\r\n};\r\n\r\nexport { productArray, getProductData };","import { createContext, useState } from 'react';\r\nimport { getProductData } from './productStore';\r\n\r\nexport const CartContext = createContext({\r\n    items: [],\r\n    getProductQuantity: () => {},\r\n    addOne: () => {},\r\n    removeOne: () => {},\r\n    deleteFromCart: () => {},\r\n    getTotalCost: () => {}\r\n});\r\n\r\n// contains all the major functions for product and cart functionality\r\nexport function CartProvider({children}) {\r\n    const [cartProducts, setCartProducts] = useState([]);\r\n    \r\n    function getProductQuantity(id) {\r\n        const quantity = cartProducts.find(product => product.id === id)?.quantity\r\n\r\n        if(quantity === undefined) {\r\n            return 0;\r\n        }\r\n        \r\n        return quantity;\r\n    };\r\n\r\n    function addOne(id) {\r\n        const quantity = getProductQuantity(id);\r\n\r\n        // if product is not in the cart\r\n        if(quantity === 0) {\r\n            setCartProducts([...cartProducts, { id: id, quantity: 1 }]);\r\n        // if product is already in the cart\r\n        } else {\r\n            setCartProducts(cartProducts.map(\r\n                product => product.id === id \r\n                ? { ...product, quantity: product.quantity + 1 }\r\n                : product)\r\n            )\r\n        };\r\n    };\r\n\r\n    function removeOne(id) {\r\n        const quantity = getProductQuantity(id);\r\n\r\n        if(quantity === 1) {\r\n            deleteFromCart(id)\r\n        } else {\r\n            setCartProducts(cartProducts.map(\r\n                product => product.id === id \r\n                ? { ...product, quantity: product.quantity - 1 }\r\n                : product)\r\n            )  \r\n        };\r\n    };\r\n\r\n    function deleteFromCart(id) {\r\n        setCartProducts(\r\n            cartProducts => cartProducts.filter(currentProduct => {\r\n            return currentProduct.id !== id;\r\n        }))\r\n    };\r\n\r\n    function getTotalCost() {\r\n        let totalCost = 0;\r\n\r\n        // eslint-disable-next-line\r\n        cartProducts.map((cartItem) => {\r\n            const productData = getProductData(cartItem.id);\r\n            totalCost += (productData.price * cartItem.quantity);\r\n        });\r\n        return totalCost;\r\n    };\r\n\r\n    const contextValue = {\r\n        items: cartProducts,\r\n        getProductQuantity,\r\n        addOne,\r\n        removeOne,\r\n        deleteFromCart,\r\n        getTotalCost\r\n    };\r\n\r\n    return (\r\n    <CartContext.Provider value={contextValue}>\r\n        {children}\r\n    </CartContext.Provider>\r\n    );\r\n};\r\n\r\nexport default CartProvider;","import Button from 'react-bootstrap/Button';\r\nimport { CartContext } from '../../CartContext';\r\nimport { useContext } from 'react';\r\nimport { getProductData } from '../../productStore';\r\n\r\n// will give product information to the shopping cart modal\r\nfunction CartProduct(props) {\r\n    const cart = useContext(CartContext);\r\n    const id = props.id;\r\n    const quantity = props.quantity;\r\n    const productData = getProductData(id);\r\n\r\n    return (\r\n        <div>\r\n            <h3>{ productData.name }</h3>\r\n            <p>Qty: { quantity }</p>\r\n            <p>${ (quantity * productData.price) }</p>\r\n            <Button size='sm' onClick={ () => cart.deleteFromCart(id) }>Remove</Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CartProduct;","import { Button, Navbar, Modal } from 'react-bootstrap';\r\nimport { useState, useContext } from 'react';\r\nimport { CartContext } from '../../CartContext';\r\nimport CartProduct from '../CartProduct/CartProduct';\r\n\r\nfunction NavComponent() {\r\n    const cart = useContext(CartContext);\r\n    const [show, setShow] = useState(false);\r\n    const handleShow = () => setShow(true);\r\n    const handleClose = () => setShow(false);\r\n\r\n    // adds up all product.quantity to show total amount of products in cart\r\n    const productCount = cart.items.reduce((sum, product) => sum + product.quantity, 0);\r\n    console.log(cart);\r\n    return (\r\n        <div>\r\n            <Navbar expand='sm'>\r\n                <Navbar.Brand href='/'>\r\n                    E-Commerce Store\r\n                </Navbar.Brand>\r\n                <Navbar.Toggle />\r\n                <Navbar.Collapse className='justify-content-end'>\r\n                    <Button onClick={handleShow}> Cart ({ productCount }) </Button>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Shopping Cart</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {/* If there are products, map over current */}\r\n                    { productCount > 0 ?\r\n                        <div>\r\n                            <p>In Cart: </p>\r\n                            { cart.items.map((currentProduct, index) => (\r\n                                // gives product info to the cart modal to display\r\n                                <CartProduct key={index} id={currentProduct.id} quantity={currentProduct.quantity}>Total</CartProduct>\r\n                            ))}\r\n                            {/* total cost limited to 2 decimals */}\r\n                            <h2>Total: ${ cart.getTotalCost().toFixed(2) }</h2>\r\n\r\n                            <Button variant='success'>Checkout</Button>\r\n                        </div>\r\n                    :\r\n                        <div>\r\n                            <p>Your Cart Is Empty!</p>\r\n                        </div>\r\n                    }\r\n                </Modal.Body>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NavComponent;","import { Card, Button, Form, Row, Col } from 'react-bootstrap';\r\nimport { CartContext } from \"../../CartContext\";\r\nimport { useContext } from 'react';\r\n\r\nfunction ProductCard (props) {\r\n    const product = props.product;\r\n    const cart = useContext(CartContext);\r\n    const productQuantity = cart.getProductQuantity(product.id);\r\n    // console.log(cart.items);\r\n\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <Card.Title>{product.name}</Card.Title>\r\n                <Card.Text>${product.price}</Card.Text>\r\n                {/* checks product quantity to determine which buttons to show */}\r\n                { productQuantity > 0 ?\r\n                    <div>\r\n                        <Form as={Row}>\r\n                            <Form.Label column='true' sm='6'> In Cart: {productQuantity} </Form.Label>\r\n                            <Col sm='6'>\r\n                                <Button sm='6' onClick={ () => cart.addOne(product.id)} className='mx-2'>+</Button>\r\n                                <Button sm='6' onClick={ () => cart.removeOne(product.id)}className='mx-2'>-</Button>\r\n                            </Col>\r\n                        </Form>\r\n                        <Button variant='danger' onClick={ () => cart.deleteFromCart(product.id)} className='my-2'>Remove All</Button>\r\n                    </div>\r\n                    :\r\n                    <Button variant='primary' onClick={ () => cart.addOne(product.id) }> Add To Cart </Button>\r\n                }\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n};\r\n\r\nexport default ProductCard;","import { Row, Col } from 'react-bootstrap';\r\nimport { productArray } from '../productStore';\r\nimport ProductCard from '../components/ProductCard/ProductCard';\r\n\r\nfunction Store() {\r\n    return (\r\n        <div>\r\n            <h1 align='center' className='p-3'>\r\n                Welcome, get Shopping!\r\n            </h1>\r\n            <Row xs={1} md={3} className='g-4'>\r\n                {productArray.map((product, index) => (\r\n                    <Col align='center' key={index}>\r\n                        <ProductCard product={product} />\r\n                    </Col>\r\n                ))}\r\n            </Row>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Store;","\r\nfunction Success() {\r\n    return (\r\n        <h1>Purchase Successful!</h1>\r\n    );\r\n};\r\n\r\nexport default Success;","\r\n\r\nfunction Cancel() {\r\n    return (\r\n        <h1>Stripe payment has been cancelled!</h1>\r\n    );\r\n};\r\n\r\nexport default Cancel;"," import React, {useState} from 'react'\r\n\r\n\r\n\r\nfunction LoginForm({Login, error}) {\r\n    const [details, setDetails] = useState({email:\"\", password:\"\"})\r\n    const submitHandler = e =>{\r\n        e.preventDefault();\r\n        // {handleLoggedIn}\r\n        Login(details);\r\n\r\n    }\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n        <div>\r\n            <h2>Login</h2>\r\n            {(error !== \"\") ? (<div className=\"error\">{error}</div>) : \"\"}\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"email\">Email:</label>\r\n                <input type=\"text\" name=\"email\" id=\"email\" onChange={e => setDetails({...details, email: e.target.value})} value= {details.email} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"password\">Password:</label>\r\n                <input type=\"password\" name=\"password\" id=\"password\" onChange={e => setDetails({...details, password: e.target.value})} value= {details.password} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <input type=\"submit\" value=\"Login\"  />\r\n\r\n            </div>\r\n            <div>\r\n                <h4>Don't have an account?</h4>\r\n                <link to=\"Create\"><button>Click Here!</button></link>\r\n            </div>\r\n        </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default LoginForm","import React, { useState } from 'react';\r\nimport LoginForm from '../components/LoginForm';\r\n// import Queries from '../components/Queries'\r\n\r\nconst adminUser = {email:\"admin@admin.com\", password:\"admin\"}\r\n\r\nconst UserPage = () => {\r\n    // const data = Queries\r\n    // const details = LoginForm.details\r\n    const [loggedIn, setLoggedIn] = useState(false)\r\n    const [user, setUser] = useState({name:\"\", email:\"\"});\r\n    const [error, setError] = useState(\"\");\r\n//     const handleLoggedIn = () => {\r\n//         if (details.email === data.user.email && details.password === data.user.password){\r\n//             setLoggedIn(true)\r\n//         }\r\n// }\r\n    const UserPage = details =>{\r\n        console.log(details)\r\n\r\n        if (details.email === adminUser.email && details.password === adminUser.password){\r\n        console.log(\"logged In!\")\r\n        setLoggedIn(true)\r\n        setUser({\r\n            name:details.name,\r\n            email:details.email\r\n        })}\r\n    if (loggedIn===true){\r\n        return(\r\n          <div>\r\n              {(user.email !==\"\") ? (\r\n                <div>\r\n\r\n                </div>\r\n              ):(\r\n                  <div>\r\n                      <LoginForm UserPage={UserPage} error={error} />\r\n                  </div>\r\n              )}\r\n          </div>\r\n      )\r\n    } else {\r\n        console.log('Information Does not match')\r\n        setError(\"Information does not match\")\r\n    }}\r\n\r\n    const Logout = () => {\r\n        setUser({email:\"\", password:\"\"})\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            {(user.email !==\"\") ? (\r\n                <div className=\"welcome\">\r\n                    <h2>Welcome, <span>{user.email}!</span></h2>\r\n                    <button onClick={Logout} >Logout</button>\r\n                </div>\r\n            ):(\r\n                <div>\r\n                    <LoginForm UserPage={UserPage} error={error} />\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n            }\r\n\r\nexport default UserPage;","import './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport NavComponent from './components/Navbar/Navbar';\r\nimport { Container } from 'react-bootstrap';\r\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\r\nimport Store from './pages/Store';\r\nimport Success from './pages/Success';\r\nimport Cancel from './pages/Cancel';\r\nimport CartProvider from './CartContext';\r\nimport UserPage from './pages/UserPage'\r\n\r\n\r\nfunction App() {\r\n \r\n  return (\r\n    <CartProvider>\r\n      <Container>\r\n        <NavComponent></NavComponent>\r\n        <BrowserRouter>\r\n          <Routes>\r\n            <Route index element={<Store />} />\r\n            <Route path='success' element={<Success />} />\r\n            <Route path='cancel' element={<Cancel />} />\r\n            <Route path='user' element={<UserPage />} />\r\n        </Routes>\r\n        </BrowserRouter>\r\n      </Container>\r\n    </CartProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}